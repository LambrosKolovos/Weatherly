{"version":3,"sources":["Components/Extra.js","weatherIcon.js","Components/Preview.js","Components/SearchField.js","Components/Daily.js","App.js","index.js"],"names":["Extra","title","info","iconName","type","className","NaN","getIcon","getSymbol","weatherIcon","name","Preview","description","city","country","temperature","feelslike","style","fontSize","fontWeight","paddingBottom","charAt","toUpperCase","slice","toLowerCase","SearchField","inputFunction","enterFunction","clickFunction","display","placeholder","placeholdertextcolor","onKeyDown","onChange","onClick","color","Daily","str","day","icon","max","min","bool","URL_CURRENT","URL_WEEKLY","weeklyOnly","API_KEY","convertToCelcious","temp","Math","round","getHour","seconds","floor","getMinutes","getWeekDay","zone","d","Date","localTime","getTime","localOffset","getTimezoneOffset","console","log","getDay","week","result","i","length","push","App","state","visible","warning","input","city_name","current_temp","feels_like","weather_status","weather_description","timestamp","daily_status","lat","lon","humidity","chance_of_rain","speed","sunrise","sunset","daytime","mapping_var","weekdays","weekly_temps_min","weekly_temps_max","display_current_weather","res1","setState","coord","sys","main","weather","weekly_weather_call","a","weeklyWeather","fetch","json","res2","daily","pop","wind_speed","timezone_offset","map","item","current","dt","totalTime","hour","minute","buttonClick","currentWeather","cod","e","key","trim","getText","target","value","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc973be8.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../CSS/Extra.css';\r\nimport {WiHumidity} from 'react-icons/wi';\r\nimport {BiWind} from 'react-icons/bi';\r\nimport {WiRainWind} from 'react-icons/wi';\r\nimport {FiSun} from 'react-icons/fi';\r\n\r\nconst getIcon = (iconName) => {\r\n        switch(iconName){\r\n            case 'humidity':\r\n                return <WiHumidity/>\r\n            case 'wind':\r\n                return <BiWind/>\r\n            case 'rain':\r\n                return <WiRainWind/>\r\n            case 'daytime':\r\n                return <FiSun/>\r\n            default:\r\n                return NaN\r\n        }\r\n};\r\n\r\nconst getSymbol = (type) => {\r\n    switch(type){\r\n        case 'percent':\r\n            return '%'\r\n        case 'meters':\r\n            return 'm/s'\r\n        case 'time':\r\n            return 'hrs'\r\n        default:\r\n            return ' '    \r\n    }\r\n}\r\n\r\nconst Extra = ({title, info, iconName, type}) => {\r\n    return (\r\n        <div className=\"main-body\">\r\n            <div className=\"icon-div\">{getIcon(iconName)}</div>\r\n            <div>\r\n                <div className=\"title\">\r\n                    <div>{title}</div>\r\n                </div> \r\n                <div className=\"info\">\r\n                    {info}{getSymbol(type)}\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Extra\r\n","import React from 'react'\r\nimport {TiWeatherPartlySunny} from 'react-icons/ti';\r\nimport {FiSun} from 'react-icons/fi';\r\nimport {WiRainWind} from 'react-icons/wi';\r\nimport {BiCloudSnow} from 'react-icons/bi';\r\nimport {WiDayThunderstorm} from 'react-icons/wi';\r\nimport {WiFog} from 'react-icons/wi';\r\nimport {FiCloudDrizzle} from 'react-icons/fi';\r\nimport {BsCloud} from 'react-icons/bs';\r\n\r\nconst weatherIcon = (name) => {\r\n    switch(name){\r\n        case 'Thunderstorm':\r\n            return <WiDayThunderstorm/>\r\n        case 'Drizzle':\r\n            return <FiCloudDrizzle/>\r\n        case 'Rain':\r\n            return <WiRainWind/>\r\n        case 'Snow':\r\n            return <BiCloudSnow />\r\n        case 'Clear':\r\n            return <FiSun />\r\n        case 'Atmosphere':\r\n            return <WiFog />\r\n        case 'Mist':\r\n            return <WiFog />\r\n        case 'Clouds':\r\n            return <BsCloud />\r\n        \r\n        default:\r\n            return <TiWeatherPartlySunny/>           \r\n    }\r\n\r\n}\r\n\r\nexport default weatherIcon;","import React from 'react'\r\nimport weatherIcon from \"../weatherIcon.js\"\r\n\r\nconst Preview = ({type, description, city, country, temperature, feelslike}) => {\r\n    return (\r\n        <div>\r\n            <div style={{fontSize: \"40px\"}}>\r\n                {weatherIcon(type)}\r\n            </div>\r\n            <div style={{fontWeight: \"bold\", fontSize: \"20px\", paddingBottom: \"25px\"}}>\r\n                {description.charAt(0).toUpperCase() + description.slice(1)}\r\n            </div>\r\n            <div style={{fontSize: \"20px\"}}>\r\n                {city.charAt(0).toUpperCase() + city.slice(1).toLowerCase()}, {country}\r\n            </div>\r\n            <div style={{fontSize: \"35px\", fontWeight: \"900\"}}>\r\n                {temperature}°C\r\n            </div>\r\n            <div style={{fontSize: \"14px\"}}>Feels like: {feelslike}°C</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview\r\n","import React from 'react'\r\nimport \"../CSS/SearchField.css\"\r\nimport {BsSearch} from 'react-icons/bs'\r\n\r\n\r\n\r\nconst SearchField = ({inputFunction, enterFunction, clickFunction}) => {\r\nreturn (\r\n\t\t<div style={{display: \"inline-flex\"}}>\r\n            <input \r\n                className=\"search-field\" \r\n                placeholder=\"City name\"\r\n                placeholdertextcolor=\"#e3071d\"\r\n                onKeyDown={enterFunction} \r\n                onChange={inputFunction} \r\n            />\r\n            <button className=\"search-button\"  onClick={clickFunction}>\r\n                <BsSearch style={{color: \"white\"}}/>\r\n            </button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchField\r\n\r\n\r\n","import React from 'react';\r\nimport \"../CSS/Daily.css\";\r\nimport weatherIcon from '../weatherIcon.js';\r\n\r\nconst isToday = (str) => {\r\n    if(str === 'True')\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\nexport const Daily = ( {day, icon, max, min, bool} ) => {\r\n    return (\r\n        <div className={isToday(bool)? `daily-card today` : `daily-card`}>\r\n            <div style={{paddingBottom: \"10px\"}}>\r\n                {day}\r\n            </div>\r\n            <div style={{fontSize: \"40px\"}}>\r\n                {weatherIcon(icon)}\r\n            </div>\r\n            <div style={{fontWeight: \"600\", fontSize: \"25px\"}}>\r\n                {max}°C\r\n            </div>\r\n            <div style={{fontWeight: \"200\", fontSize: \"15px\", color: \"lightgray\"}}> \r\n                {min}°C\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default(Daily)\r\n","import React, {Component} from 'react';\nimport './CSS/App.css';\nimport Extra from './Components/Extra.js';\nimport Preview from \"./Components/Preview.js\";\nimport SearchField from \"./Components/SearchField.js\"; \nimport Daily from \"./Components/Daily.js\";\n\nconst URL_CURRENT = 'https://api.openweathermap.org/data/2.5/weather?q=';\nconst URL_WEEKLY = 'https://api.openweathermap.org/data/2.5/onecall?';\nconst weeklyOnly = '&exclude=minutely,hourly,alerts';\nconst API_KEY = '&appid=fa8ad03028a76823bc81af28b4cf6716';\n\nconst convertToCelcious = (temp) => {\n  return Math.round(temp - 273.15, 2);\n}\n\nconst getHour = (seconds) => {\n    return Math.floor(seconds / 3600);\n}\n\nconst getMinutes = (seconds) => {\n    return Math.round(seconds / 60);\n}\n\nconst getWeekDay = (zone) => {\n\n  //Get local time\n  var d = new Date()\n  var localTime = d.getTime()\n  var localOffset = d.getTimezoneOffset() * 60000\n  var UTC = localTime + localOffset\n\n  //Convert to city fetched time\n  var city_searched_time = UTC + (1000 * zone)  \n  var day = new Date(city_searched_time);\n  \n  console.log(day.getDay());\n  var week = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n\n  var result =[] \n \n  for (let i = 0; i < week.length; i++) {\n    if( i === 0)\n      console.log(\"Week starting from: \" + week[(day.getDay() + i) % 7])\n    result.push(week[(day.getDay() + i) % 7]);\n  }\n\n  return result;\n}\n\nclass App extends Component{\n\n  state = {\n    visible: false,\n    warning: false,\n    input: \"\",\n    city_name: \"\",\n    country: \"\",\n    current_temp: 0,\n    feels_like: 0,\n    weather_status: \"\",\n    weather_description: \"\",\n    timestamp: 0,\n    daily_status: [],\n    lat: 0,\n    lon: 0,\n    humidity: 0,\n    chance_of_rain: 0,\n    speed: 0,\n    sunrise: 0,\n    sunset: 0,\n    daytime: 0,\n    mapping_var: [],\n    weekdays: [],\n    weekly_temps_min: [],\n    weekly_temps_max: []\n  };\n  \n  display_current_weather = (res1) => {\n    this.setState({\n      city_name: this.state.input,\n      lat: res1.coord.lat,\n      lon: res1.coord.lon,\n      country: res1.sys.country,\n      current_temp: convertToCelcious(res1.main.temp),\n      feels_like: convertToCelcious(res1.main.feels_like),\n      weather_status: res1.weather[0].main,\n      weather_description: res1.weather[0].description,\n      weekdays: [],\n      weekly_temps_max: [],\n      weekly_temps_min: [],\n      daily_status: []\n    })\n  }\n\n  weekly_weather_call = async () => {\n    const weeklyWeather = fetch(URL_WEEKLY + \"lat=\" + this.state.lat + \"&lon=\" + this.state.lon + weeklyOnly + API_KEY)\n    const res2 = await (await weeklyWeather).json()\n    //console.log(res2)\n\n    this.setState({\n      warning: false,\n\n      humidity: res2.daily[0].humidity,\n      chance_of_rain: res2.daily[0].pop * 100,\n      speed: res2.daily[0].wind_speed,\n      sunrise: res2.daily[0].sunrise,\n      sunset: res2.daily[0].sunset,\n      \n      mapping_var: getWeekDay(res2.timezone_offset).map(item => {\n        this.state.weekdays.push(item)\n      }),\n      mapping_var: res2.daily.map(item => {\n        this.state.weekly_temps_min.push(convertToCelcious(item.temp.min))\n      }),\n      mapping_var: res2.daily.map(item => {\n        this.state.weekly_temps_max.push(convertToCelcious(item.temp.max))\n      }),\n      mapping_var: res2.daily.map(item => {\n        this.state.daily_status.push(item.weather[0].main)\n      })\n    })\n\n    console.log(res2)\n    console.log(\"Timestamp: \" + res2.current.dt)\n    this.setState({\n      daytime: this.state.sunset - this.state.sunrise\n    })\n\n    let totalTime = this.state.daytime\n    let hour = getHour(totalTime);\n    let minute = getMinutes(totalTime - hour*3600);\n\n    this.setState({\n      daytime: hour + \"h \" + minute + \"m\",\n      visible: true\n    })\n  }\n\n  buttonClick = async () => {\n  \n    const currentWeather = fetch(URL_CURRENT + this.state.input + API_KEY)\n    const res1 = await (await currentWeather).json()\n\n    if(res1.cod === 200){\n      this.display_current_weather(res1)\n      this.weekly_weather_call()\n    }\n    else{\n      this.setState({\n        warning: true\n      })\n    }\n  }\n\n  enterFunction = (e) => {\n    if(e.key === 'Enter'){\n      if(this.state.input.trim() !== \"\"){\n        this.buttonClick()\n      }\n      else{\n        this.setState({\n          warning: true\n        })\n      }\n    }\n  }\n\n  getText = (e) => {\n    this.setState({\n      input: e.target.value,\n      warning: false\n    })\n  }\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"upper-body\">\n          <div className={this.state.visible? 'temperature-preview fade': 'hide-upper'}>\n            <Preview \n              description={this.state.weather_description}\n              type={this.state.weather_status} \n              city={this.state.city_name}\n              country={this.state.country}\n              temperature={this.state.current_temp}\n              feelslike={this.state.feels_like}\n            />\n          </div>\n          <div className=\"search-city\">\n            <SearchField inputFunction={this.getText} enterFunction={this.enterFunction} clickFunction={this.buttonClick}/>\n            <div className={this.state.warning? `warn` : 'warn-hide'}>No such city found!</div>\n          </div>\n          \n          <div className={this.state.visible? 'extras fade': 'hide-upper'}>\n            <Extra title=\"Humidity\" info={this.state.humidity} iconName=\"humidity\" type=\"percent\"></Extra>\n            <Extra title=\"Chance of Rain\" info={this.state.chance_of_rain} iconName=\"rain\" type=\"percent\"></Extra>\n            <Extra title=\"Wind Speed\" info={this.state.speed} iconName=\"wind\" type=\"meters\"></Extra>\n            <Extra title=\"Daytime\" info={this.state.daytime} iconName=\"daytime\"></Extra>\n          </div>\n        </div>\n        <div className={this.state.visible? `lower-body fade` : 'hide-lower'}>\n          <Daily day={this.state.weekdays[0]} icon={this.state.daily_status[0]}\n           max={this.state.weekly_temps_max[0]} min={this.state.weekly_temps_min[0]} bool=\"True\"/>\n          \n          <Daily day={this.state.weekdays[1]} icon={this.state.daily_status[1]} \n          max={this.state.weekly_temps_max[1]} min={this.state.weekly_temps_min[1]} />\n          \n          <Daily day={this.state.weekdays[2]} icon={this.state.daily_status[2]}\n           max={this.state.weekly_temps_max[2]} min={this.state.weekly_temps_min[2]} />\n          \n          <Daily day={this.state.weekdays[3]} icon={this.state.daily_status[3]}\n           max={this.state.weekly_temps_max[3]} min={this.state.weekly_temps_min[3]} />\n          \n          <Daily day={this.state.weekdays[4]} icon={this.state.daily_status[4]}\n           max={this.state.weekly_temps_max[4]} min={this.state.weekly_temps_min[4]} />\n         \n          <Daily day={this.state.weekdays[5]} icon={this.state.daily_status[5]}\n           max={this.state.weekly_temps_max[5]} min={this.state.weekly_temps_min[5]} />\n         \n          <Daily day={this.state.weekdays[6]} icon={this.state.daily_status[6]}\n           max={this.state.weekly_temps_max[6]} min={this.state.weekly_temps_min[6]} />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CSS/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}